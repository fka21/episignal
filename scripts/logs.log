2024-10-31 13:59:43,088:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:43,100:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:43,100:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:43,101:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:43,149:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:43,151:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:43,154:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:45,340:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/metrics.py:210: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/metrics.py", line 202, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/pipeline.py", line 342, in predict_proba
    return self.steps[-1][1].predict_proba(Xt, **params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_classification.py", line 366, in predict_proba
    neigh_ind = self.kneighbors(X, return_distance=False)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_base.py", line 835, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples_fit, but n_neighbors = 5, n_samples_fit = 2, n_samples = 2

  warnings.warn(

2024-10-31 13:59:45,346:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/model_selection/_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 137, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/pipeline.py", line 334, in predict
    y = self.steps[-1][-1].predict(X, **params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_base.py", line 835, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples_fit, but n_neighbors = 5, n_samples_fit = 2, n_samples = 2

  warnings.warn(

2024-10-31 13:59:45,362:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/metrics.py:210: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/metrics.py", line 202, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/pipeline.py", line 342, in predict_proba
    return self.steps[-1][1].predict_proba(Xt, **params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_classification.py", line 366, in predict_proba
    neigh_ind = self.kneighbors(X, return_distance=False)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_base.py", line 835, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples_fit, but n_neighbors = 5, n_samples_fit = 2, n_samples = 2

  warnings.warn(

2024-10-31 13:59:45,367:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/model_selection/_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 137, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/pipeline.py", line 334, in predict
    y = self.steps[-1][-1].predict(X, **params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_base.py", line 835, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples_fit, but n_neighbors = 5, n_samples_fit = 2, n_samples = 2

  warnings.warn(

2024-10-31 13:59:47,492:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/metrics.py:210: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/metrics.py", line 202, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/pipeline.py", line 342, in predict_proba
    return self.steps[-1][1].predict_proba(Xt, **params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_classification.py", line 366, in predict_proba
    neigh_ind = self.kneighbors(X, return_distance=False)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_base.py", line 835, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples_fit, but n_neighbors = 5, n_samples_fit = 2, n_samples = 2

  warnings.warn(

2024-10-31 13:59:47,498:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/model_selection/_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 137, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/pipeline.py", line 334, in predict
    y = self.steps[-1][-1].predict(X, **params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_base.py", line 835, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples_fit, but n_neighbors = 5, n_samples_fit = 2, n_samples = 2

  warnings.warn(

2024-10-31 13:59:47,517:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/metrics.py:210: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/metrics.py", line 202, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/pipeline.py", line 342, in predict_proba
    return self.steps[-1][1].predict_proba(Xt, **params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_classification.py", line 366, in predict_proba
    neigh_ind = self.kneighbors(X, return_distance=False)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_base.py", line 835, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples_fit, but n_neighbors = 5, n_samples_fit = 2, n_samples = 2

  warnings.warn(

2024-10-31 13:59:47,522:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/model_selection/_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 137, in __call__
    score = scorer._score(
            ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
             ^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/pycaret/internal/pipeline.py", line 334, in predict
    y = self.steps[-1][-1].predict(X, **params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/neighbors/_base.py", line 835, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples_fit, but n_neighbors = 5, n_samples_fit = 2, n_samples = 2

  warnings.warn(

2024-10-31 13:59:47,828:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:47,830:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:47,830:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:47,831:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:47,842:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:47,844:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:47,844:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:47,845:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:48,081:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:48,082:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:48,084:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:49,701:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:49,702:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:49,703:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:49,704:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:49,922:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:49,923:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:49,924:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:49,924:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:51,464:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:51,465:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:51,467:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:51,682:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:51,683:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:51,684:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:51,685:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:51,694:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:51,696:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:51,696:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:51,697:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,030:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,032:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,034:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,067:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,069:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,069:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:52,071:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,463:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-31 13:59:52,484:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,486:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,486:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:52,487:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,497:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-31 13:59:52,517:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,519:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,519:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:52,520:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,760:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,761:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,762:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,793:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,794:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:52,795:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,397:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,399:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,400:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,401:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,403:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,404:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:53,405:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,624:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,625:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,626:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:53,626:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,627:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,627:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:53,628:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,628:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,815:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,817:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,817:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:53,817:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,818:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,818:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-31 13:59:53,819:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-31 13:59:53,819:WARNING:/Users/ferenc.kagan/Documents/Projects/episignal/.venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

